angular.module("school_erp",["ui.router","720kb.datepicker","ngDialog","zingchart-angularjs","htmlToPdfSave","xeditable","ui.calendar","ui.bootstrap"]).run(function($rootScope,$state,authService){$rootScope.loginPage=false;$rootScope.role="teacher";$rootScope.$on("$stateChangeStart",function(event,toState,toParams){var requireLogin=toState.data.requireLogin;if(requireLogin&&authService.getUserInfo()==null){$rootScope.authenticated=false;event.preventDefault();return $state.go("login")}})});angular.module("school_erp").config(function($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("main",{url:"/",views:{"":{templateUrl:"app/components/shared/main.html"},"header@main":{templateUrl:"app/components/shared/header.html",controller:"headController"},"sidebar@main":{templateUrl:"app/components/shared/sidebar.html",controller:"sideController"},"footer@main":{templateUrl:"app/components/shared/footer.html"}},data:{requireLogin:true}}).state("main.dashboard",{url:"dashboard",templateUrl:"app/components/dashboard/dashboard.html",controller:"dashboardController",data:{requireLogin:true}}).state("main.studentAdmission",{url:"studentInfo/studentAdmission",templateUrl:"app/components/studentAdmission/studentAdmission.html",controller:"studentAdmissionController",data:{requireLogin:true}}).state("main.student",{url:"studentInfo/student",templateUrl:"app/components/student/student.html",controller:"studentController",data:{requireLogin:true}}).state("main.employee",{url:"employeeInfo/employee",templateUrl:"app/components/employee/employee.html",controller:"employeeController",data:{requireLogin:true}}).state("main.employeeDetails",{url:"employeeInfo/employeeDetails",templateUrl:"app/components/employeeDetails/employeeDetails.html",controller:"employeeDetailsController",data:{requireLogin:true}}).state("main.employeeAttendance",{url:"employeeInfo/employeeAttendance",templateUrl:"app/components/employeeAttendance/employeeAttendance.html",controller:"employeeAttendanceController",data:{requireLogin:true}}).state("main.studentAttendance",{url:"attendance/studentAttendance",templateUrl:"app/components/studentAttendance/studentAttendance.html",controller:"studentAttendanceController",data:{requireLogin:true}}).state("main.attendenceReports1",{url:"attendance/attendenceReports/Report1",templateUrl:"app/components/attendenceReports/Report1/report1.html",controller:"reportOneController",data:{requireLogin:true}}).state("main.attendenceReports2",{url:"attendance/attendenceReports/Report2",templateUrl:"app/components/attendenceReports/Report2/report2.html",controller:"reportTwoController",data:{requireLogin:true}}).state("main.subjects",{url:"academics/subjects",templateUrl:"app/components/subjects/subjects.html",controller:"subjectsController",data:{requireLogin:true}}).state("main.chapters",{url:"academics/chapters",templateUrl:"app/components/chapters/chapters.html",controller:"chaptersController",data:{requireLogin:true}}).state("main.assignSubjects",{url:"academics/assignSubjects",templateUrl:"app/components/assignSubjects/assignSubjects.html",controller:"assignSbjectsController",data:{requireLogin:true}}).state("main.assignments",{url:"academics/assignments",templateUrl:"app/components/assignments/Assignments.html",controller:"assignmentsController",data:{requireLogin:true}}).state("main.examSchedules",{url:"examination/examSchedules",templateUrl:"app/components/examSchedules/examSchedules.html",controller:"examSchedulesController",data:{requireLogin:true}}).state("main.examPapers",{url:"examination/examPapers",templateUrl:"app/components/examPapers/examPapers.html",controller:"examPapersController",data:{requireLogin:true}}).state("main.evaluations",{url:"examination/evaluations",templateUrl:"app/components/evaluations/evaluations.html",controller:"evaluationsController",data:{requireLogin:true}}).state("main.examReports1",{url:"examination/examReports/barChart1",templateUrl:"app/components/examReports/barChart1/barChart1.html",controller:"barChartOneController",data:{requireLogin:true}}).state("main.examReports2",{url:"examination/examReports/barChart2",templateUrl:"app/components/examReports/barChart2/barChart2.html",controller:"barChartTwoController",data:{requireLogin:true}}).state("main.classWise",{url:"timetable/classWise",templateUrl:"app/components/classWise/classWise.html",controller:"classWiseController",data:{requireLogin:true}}).state("main.schoolEvents",{url:"timetable/schoolEvents",templateUrl:"app/components/schoolEvents/schoolEvents.html",controller:"schoolEventsController",data:{requireLogin:true}}).state("main.onlineNoticeBoard",{url:"timetable/onlineNoticeBoard",templateUrl:"app/components/onlineNoticeBoard/onlineNoticeBoard.html",controller:"noticeboardController",data:{requireLogin:true}}).state("main.addBook",{url:"library/addBook",templateUrl:"app/components/addBook/addBook.html",controller:"addBookController",data:{requireLogin:true}}).state("main.bookList",{url:"library/bookList",templateUrl:"app/components/bookList/bookList.html",controller:"bookListController",data:{requireLogin:true}}).state("main.addStation",{url:"transport/addStation",templateUrl:"app/components/addStation/addStation.html",controller:"addStationController",data:{requireLogin:true}}).state("main.addBusRoute",{url:"transport/addBusRoute",templateUrl:"app/components/addBusRoute/addBusRoute.html",controller:"BusRouteController",data:{requireLogin:true}}).state("main.routeGeolocation",{url:"transport/routeGeolocation",templateUrl:"app/components/routeGeolocation/routeGeolocation.html",controller:"routeGeoLocationController",data:{requireLogin:true}}).state("main.addVehicle",{url:"transport/addVehicle",templateUrl:"app/components/addVehicle/addVehicle.html",controller:"addVehicleController",data:{requireLogin:true}}).state("first_page",{url:"/first_page",templateUrl:"app/components/first_page/firstPage.html",data:{requireLogin:false}}).state("login_page",{url:"/login_page",templateUrl:"app/components/login_page/loginPage.html",controller:"loginController",data:{requireLogin:false}});$urlRouterProvider.otherwise("/login_page")});angular.module("school_erp").controller("addBookController",["$http","$scope","addBookServices","ngDialog","globalServices","subjectsServices",function($http,$scope,addBookServices,ngDialog,globalServices,subjectsServices){$scope.data=[];$scope.today1="01/01/2000";globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){$scope.secId=[];globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.populateSubjects($scope.secId)}).error(function(data,success){$scope.populateSubjects($scope.secId)})};$scope.populateSubjects=function(secId){$scope.subData=[];subjectsServices.getSubjects(secId).success(function(data,status){$scope.subData=data.subjects;$scope.subId=$scope.subData[0].subject_id}).error(function(data,success){})};$scope.addBook=function(data){var bookDetails={book_title:$scope.data.book_title,author_name:$scope.data.author_name,book_price:$scope.data.book_price,qty:$scope.data.qty,rack_number:$scope.data.rack_number,inward_date:$scope.data.inward_date,book_description:$scope.data.book_description,subject:$scope.data.subject};addBookServices.setBook(bookDetails).success(function(data,status){ngDialog.open({template:"<p>Books are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getBook()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})}}]);angular.module("school_erp").factory("addBookServices",["$http","globalServices",function($http,globalServices){var addBookServices={};addBookServices.getBook=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/book/SCH-9271"})};addBookServices.setBook=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/book/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};addBookServices.EditBook=function(dataValue,book_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_book/"+book_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};addBookServices.DeleteBook=function(book_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_book/"+book_id})};addBookServices.getEmployee=function(employeeID){var response=$http({method:"post",url:"Home/getEmployeeByNo",params:{id:JSON.stringify(employeeID)}});return response};addBookServices.updateEmp=function(employee){var response=$http({method:"post",url:"Home/UpdateEmployee",data:JSON.stringify(employee),dataType:"json"});return response};return addBookServices}]);angular.module("school_erp").controller("BusRouteController",["$http","$scope","BusRouteServices","ngDialog","addStationServices","globalServices","addVehicleServices",function($http,$scope,BusRouteServices,ngDialog,addStationServices,globalServices,addVehicleServices){$scope.data=[];$scope.getBusRoute=function(){BusRouteServices.getBusRoute().success(function(data,status){console.log(JSON.stringify(data));$scope.busRoutes=data.bus_routes;$scope.routeId=$scope.busRoutes[0].route_id}).error(function(data,success){})};$scope.getStation=function(){addStationServices.getStation().success(function(data,status){console.log(JSON.stringify(data));$scope.stations=data.stations;$scope.stationId=data.stations[0].station_id}).error(function(data,success){})};$scope.addBusRoute=function(data){var BusRoutDetails={route_title:$scope.data.route_title,vehicle_code:$scope.data.vehicle_code,station:$scope.data.station,pickup_time:$scope.data.pickup_time,drop_time:$scope.data.drop_time};BusRouteServices.setBusRoute(BusRoutDetails).success(function(data,status){ngDialog.open({template:"<p>Stations are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getBusRoute()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.addTime=function(data){var TimeDetails={pickup_time:$scope.data.pickup_time,dropping_time:$scope.data.dropping_time};BusRouteServices.setTime(TimeDetails,$scope.routeId,$scope.stationId).success(function(data,status){ngDialog.open({template:"<p> BusRoutes are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getBusRoute()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};addVehicleServices.getVehicle().success(function(data,status){console.log(JSON.stringify(data));$scope.vehicles=data.vehicles;$scope.vehicle_id=data.vehicles[0].vehicle_id}).error(function(data,success){});$scope.DeleteBusRoute=function(value){$scope.editdata=angular.copy($scope.busRoutes[value]);$scope.busRoute_id=$scope.editdata.route_id;console.log($scope.busRoute_id);BusRouteServices.DeleteBusRoute($scope.busRoute_id).success(function(data,status){ngDialog.open({template:"<p>Station is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getBusRoute()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditBusRoute=function(value,busRoute){console.log("messsage");$scope.busRoute=angular.copy($scope.busRoutes[value]);var BusRoutDetails={route_title:$scope.busRoute.route_title,vehicle_name:$scope.busRoute.vehicle_name,station:$scope.busRoute.station,pickup_time:$scope.busRoute.pickup_time,drop_time:$scope.busRoute.drop_time};console.log(BusRoutDetails);$scope.busRoute_id=$scope.busRoute.route_id;console.log($scope.busRoute_id);$scope.addEditBusRoute(BusRoutDetails,$scope.busRoute_id)};$scope.addEditBusRoute=function(BusRoutDetails,busRoute_id){BusRouteServices.EditBusRoute(BusRoutDetails,busRoute_id).success(function(data,status){$scope.editdata=[];$scope.getBusRoute()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getStation();$scope.getBusRoute()}]);angular.module("school_erp").factory("BusRouteServices",["$http","globalServices",function($http,globalServices){var BusRouteServices={};BusRouteServices.getBusRoute=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/bus_route/SCH-9271"})};BusRouteServices.setBusRoute=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/bus_route/SCH-9271/",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};BusRouteServices.getTime=function(routeId,stationId){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/station_to_bus_route/"+routeId+"/"+stationId})};BusRouteServices.setTime=function(dataValue,routeId,stationId){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/station_to_bus_route/"+routeId+"/"+stationId,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};BusRouteServices.EditBusRoute=function(dataValue,busRoute_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_bus_route/"+busRoute_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};BusRouteServices.DeleteBusRoute=function(busRoute_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_bus_route/"+busRoute_id})};return BusRouteServices}]);angular.module("school_erp").controller("addStationController",["$http","$scope","$rootScope","addStationServices","ngDialog",function($http,$scope,$rootScope,addStationServices,ngDialog){$scope.data=[];$scope.getStation=function(){addStationServices.getStation().success(function(data,status){$scope.data=data.stations}).error(function(data,success){})};$scope.addStation=function(data){var StationDetails={station_name:$scope.data.station_name,station_code:$scope.data.station_code,station_geo_location:$scope.data.station_geo_location};addStationServices.setStation(StationDetails).success(function(data,status){ngDialog.open({template:"<p>Station is Added Successfully.</p>",plain:true});$scope.data=[];$scope.getStation()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteStation=function(value){$scope.editdata=angular.copy($scope.data[value]);$scope.station_id=$scope.editdata.station_id;console.log($scope.station_id);addStationServices.DeleteStation($scope.station_id).success(function(data,status){ngDialog.open({template:"<p>Station is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getStation()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditStation=function(value,station){console.log("messsage");$scope.station=angular.copy($scope.data[value]);var StationDetails={station_name:$scope.station.station_name,station_code:$scope.station.station_code,station_geo_location:$scope.station.station_geo_location};console.log(StationDetails);$scope.station_id=$scope.station.station_id;console.log($scope.station_id);$scope.addEditStation(StationDetails,$scope.station_id)};$scope.addEditStation=function(StationDetails,station_id){addStationServices.EditStation(StationDetails,station_id).success(function(data,status){$scope.editdata=[];$scope.getStation()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getStation()}]);angular.module("school_erp").factory("addStationServices",["$http","globalServices",function($http,globalServices){var addStationServices={};addStationServices.getStation=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/transport_stations/SCH-9271"})};addStationServices.setStation=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/transport_stations/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};addStationServices.EditStation=function(dataValue,station_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_station/"+station_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};addStationServices.DeleteStation=function(station_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_station/"+station_id})};return addStationServices}]);angular.module("school_erp").controller("addVehicleController",["$http","$scope","addVehicleServices","ngDialog",function($http,$scope,addVehicleServices,ngDialog){$scope.vehicles=[];$scope.data=[];$scope.getVehicle=function(){addVehicleServices.getVehicle().success(function(data,status){$scope.vehicles=data.vehicles;console.log(JSON.stringify(data))}).error(function(data,success){})};$scope.addVehicle=function(data){var VehicleDetails={vehicle_code:$scope.data.vehicle_code,vehicle_name:$scope.data.vehicle_name};addVehicleServices.setVehicle(VehicleDetails).success(function(data,status){ngDialog.open({template:"<p>Vehicle is Added Successfully.</p>",plain:true});$scope.data=[];$scope.getVehicle()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteVehicle=function(value){$scope.editdata=angular.copy($scope.vehicles[value]);$scope.vehicle_id=$scope.editdata.vehicle_id;console.log($scope.vehicle_id);addVehicleServices.DeleteVehicle($scope.vehicle_id).success(function(data,status){ngDialog.open({template:"<p>Vehicle is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getVehicle()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditVehicle=function(value,station){console.log("messsage");$scope.vehicle=angular.copy($scope.vehicles[value]);var VehicleDetails={vehicle_name:$scope.vehicle.vehicle_name,vehicle_code:$scope.vehicle.vehicle_code};console.log(VehicleDetails);$scope.vehicle_id=$scope.vehicle.vehicle_id;console.log($scope.vehicle_id);$scope.addEditVehicle(VehicleDetails,$scope.vehicle_id)};$scope.addEditVehicle=function(VehicleDetails,vehicle_id){addVehicleServices.EditVehicle(VehicleDetails,vehicle_id).success(function(data,status){$scope.editdata=[];$scope.getVehicle()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getVehicle()}]);angular.module("school_erp").factory("addVehicleServices",["$http","globalServices",function($http,globalServices){var addVehicleServices={};addVehicleServices.getVehicle=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/vehicles/SCH-9271"})};addVehicleServices.setVehicle=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/vehicles/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};addVehicleServices.EditVehicle=function(dataValue,vehicle_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_vehicle/"+vehicle_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};addVehicleServices.DeleteVehicle=function(vehicle_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_vehicle/"+vehicle_id})};return addVehicleServices}]);angular.module("school_erp").controller("assignmentsController",["$http","$scope","$rootScope","globalServices","subjectsServices","assignmentsServices","chaptersServices","ngDialog",function($http,$scope,$rootScope,globalServices,subjectsServices,assignmentsServices,chaptersServices,ngDialog){$scope.data=[];$scope.chapterId="";$scope.getClassesInitalLoad=function(){globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){})};$scope.populateSections=function(classId){$scope.secId=[];globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.populateSubjects($scope.secId)}).error(function(data,success){$scope.populateSubjects($scope.secId)})};$scope.populateSubjects=function(secId){$scope.subData=[];subjectsServices.getSubjects(secId).success(function(data,status){$scope.subData=data.subjects;$scope.subId=$scope.subData[0].subject_id;$scope.populateChapters($scope.subId)}).error(function(data,success){})};$scope.populateChapters=function(subId){chaptersServices.getChapters(subId).success(function(data,status){console.log(JSON.stringify(data));console.log("message");console.log(subId);$scope.chapterData=data[subId+""];$scope.chapterId=$scope.chapterData[0].lession_id;$scope.getAssignments($scope.chapterId)}).error(function(data,success){})};$scope.getAssignments=function(chapterId){console.log($scope.chapterId);assignmentsServices.getAssignments($scope.chapterId,$scope.secId).success(function(data,status){console.log(JSON.stringify(data));$scope.assignmentsData=data.assignments}).error(function(data,success){})};$scope.addAssignments=function(data){console.log($scope.chapterId+"lesson");var assignDetails={assignment_title:$scope.data.assignment_title,chapter_name:$scope.data.chapter_name,due_date:$scope.data.due_date,description:$scope.data.description};assignmentsServices.setAssignments(assignDetails,$scope.chapterId,$scope.secId).success(function(data,status){ngDialog.open({template:"<p>Assignments are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getAssignments()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditAssignments=function(value,assignment){console.log("messsage");$scope.assignment=angular.copy($scope.assignmentsData[value]);$scope.assignment_id=$scope.assignment.assignment_id;console.log($scope.assignment_id);var AssignmentDetails={assignment_title:$scope.assignment.assignment_title,chapter_name:$scope.assignment.chapter_name,due_date:$scope.assignment.due_date,description:$scope.assignment.description};console.log(AssignmentDetails);$scope.addEditAssignments(AssignmentDetails,$scope.assignment_id)};$scope.addEditAssignments=function(AssignmentDetails,assignment_id){assignmentsServices.EditAssignments(AssignmentDetails,assignment_id).success(function(data,status){$scope.editdata=[];$scope.getAssignments()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteAssignments=function(value){$scope.editdata=angular.copy($scope.assignmentsData[value]);$scope.assignment_id=$scope.editdata.assignment_id;console.log($scope.exam_sch_id);assignmentsServices.DeleteAssignments($scope.assignment_id).success(function(data,status){ngDialog.open({template:"<p>Assignment is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getAssignments()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.data=[{agence:"CTM",secteur:"Safi",statutImp:"operationnel"}];$scope.export=function(){html2canvas(document.getElementById("exportthis"),{onrendered:function(canvas){var data=canvas.toDataURL();var docDefinition={content:[{image:"data/image1.png",height:150,width:500}]};pdfMake.createPdf(docDefinition).download("Score_Details.pdf")}})};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}};if($rootScope.role=="parent"){$scope.secId=$rootScope.student.section;$scope.populateSubjects($scope.secId)}else{$scope.getClassesInitalLoad()}}]);angular.module("school_erp").factory("assignmentsServices",["$http","globalServices",function($http,globalServices){var assignmentsServices={};assignmentsServices.getAssignments=function(lessonId,sectionId){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/assignment/"+sectionId+"/"+lessonId})};assignmentsServices.setAssignments=function(dataValue,lessonId,sectionId){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/assignment/"+sectionId+"/"+lessonId,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};assignmentsServices.EditAssignments=function(dataValue,assignment_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_assignments/"+assignment_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};assignmentsServices.DeleteAssignments=function(assignment_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_assignments/"+assignment_id})};return assignmentsServices}]);angular.module("school_erp").factory("assignServices",["$http","globalServices",function($http,globalServices){var assignServices={};assignServices.setTeacher=function(dataValue,teacherId){console.log(dataValue,teacherId);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/addorupdatesubjectstoteacher/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};assignServices.getTeacher=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/teachers/SCH-9271"})};return assignServices}]);angular.module("school_erp").controller("assignSbjectsController",["$http","$scope","assignServices","ngDialog","globalServices","subjectsServices","employeeServices",function($http,$scope,assignServices,ngDialog,globalServices,subjectsServices,employeeServices){$scope.employeeData=[];$scope.data={};$scope.teachId="";globalServices.getClass().success(function(data,status){$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getSubjects($scope.secId)}).error(function(data,success){})};$scope.getSubjects=function(secId){subjectsServices.getSubjects(secId).success(function(data,status){console.log(JSON.stringify(data));$scope.subjectsData=data.subjects;$scope.subjectId=$scope.subjectsData[0].subject_id;console.log($scope.subjectId)}).error(function(data,success){})};$scope.getSubName=function(subid){console.log(subid);$scope.employeeData.forEach(function(ele){if(ele.subject_id==subid){return ele.name}})};employeeServices.getEmployee().success(function(data,status){console.log(data);$scope.employeeData=data.employee}).error(function(data,success){});$scope.addTeacher=function(data){console.log(data);var teacherDetails={subject_id:data.subjectObj.subject_id,subject_name:data.subjectObj.subject_name};assignServices.setTeacher(teacherDetails,$scope.data.teachId).success(function(data,status){ngDialog.open({template:"<p>ExamPapers are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getTeacher()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getTeacher=function(){assignServices.getTeacher().success(function(data,status){$scope.teacherData=data.teachers;console.log(JSON.stringify(data));console.log($scope.teacherData)}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}};$scope.getTeacher()}]);angular.module("school_erp").controller("reportOneController",["$http","$scope","$rootScope","$window","globalServices","examServices","subjectsServices","studentServices","donutChartOneService","ngDialog",function($http,$scope,$rootScope,$window,globalServices,examServices,subjectsServices,studentServices,donutChartOneService,ngDialog){$scope.evalData=[];$scope.data=[];$scope.getClassesInitalLoad=function(){globalServices.getClass().success(function(data,status){$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;console.log($scope.classId);$scope.populateSections($scope.classId)}).error(function(data,success){})};$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections
;$scope.secId=$scope.secData[0].section_id;console.log($scope.secId)}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.getDate=function(select_date){$scope.date1=$scope.select_date;$scope.getAttendence($scope.date1,$scope.classId,$scope.secId);console.log($scope.date1)};$scope.getAttendence=function(date,classId,secId){var arrPresent=new Array;var arrAbsent=new Array;var arrLeave=new Array;$scope.attData=[];donutChartOneService.getAttendence(date,classId,secId).success(function(data,status){$scope.attData=data.donutchart;console.log(JSON.stringify(data));if($scope.attData==0){$scope.chartdata=[[],[],[]];if($scope.chartdata){ngDialog.open({template:"<p>Report is not available.</p>",plain:true})}console.log("report not available")}$scope.array=$.map($scope.attData,function(item){console.log(item);if(item.status=="Present"){arrPresent.push(item.status);$scope.data1=[];for(var i=0;i<arrPresent.length;i++){$scope.data1.push(arrPresent[i])}console.log($scope.data1);$scope.present=$scope.data1.length;console.log($scope.present)}else if(item.status=="Absent"){arrAbsent.push(item.status);$scope.label1=[];for(var j=0;j<arrAbsent.length;j++){$scope.label1.push(arrAbsent[j])}console.log($scope.label1);$scope.absent=$scope.label1.length;console.log($scope.absent)}else if(item.status=="On Leave"){arrLeave.push(item.status);$scope.leave1=[];for(var k=0;k<arrLeave.length;k++){$scope.leave1.push(arrLeave[k])}console.log($scope.leave1);$scope.leave=$scope.leave1.length;console.log($scope.leave)}$scope.chartdata=[[$scope.present],[$scope.absent],[$scope.leave]];return});$scope.myJson={type:"ring",title:{text:"Attendance Report"},plot:{slice:60,detach:false,tooltip:{fontSize:16,anchor:"c",x:"50%",y:"48%",sticky:true,backgroundColor:"none",text:'<span style="color:%color">%t</span><br><span style="color:%color">%v</span>'}},legend:{verticalAlign:"bottom",align:"center"},series:[{text:"present"},{text:"absent"},{text:"leave"}]}}).error(function(data,success){})};if($rootScope.role=="parent"){$scope.secId=$rootScope.student.section}else{$scope.getClassesInitalLoad()}}]);angular.module("school_erp").factory("donutChartOneService",["$http","globalServices",function($http,globalServices){var donutChartOneService={};donutChartOneService.getAttendence=function(select_date,class_id,section_id){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/attendancechartbydate/"+select_date+"/"+class_id+"/"+section_id})};return donutChartOneService}]);angular.module("school_erp").controller("reportTwoController",["$http","$scope","$rootScope","globalServices","examServices","subjectsServices","studentServices","reportTwoService","ngDialog",function($http,$scope,$rootScope,globalServices,examServices,subjectsServices,studentServices,reportTwoService,ngDialog){$scope.months=[{name:"January",id:1},{name:"February",id:2},{name:"March",id:3},{name:"April",id:4},{name:"May",id:5},{name:"June",id:6},{name:"July",id:7},{name:"August",id:8},{name:"September",id:9},{name:"October",id:10},{name:"November",id:11},{name:"December",id:12}];$scope.evalData=[];$scope.data=[];$scope.getClassesInitalLoad=function(){globalServices.getClass().success(function(data,status){$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;console.log($scope.classId);$scope.populateSections($scope.classId)}).error(function(data,success){})};$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getStudentValue($scope.secId)}).error(function(data,success){})};$scope.getStudentValue=function(secValue){studentServices.getStudent(secValue).success(function(data,status){$scope.students=data.students;$scope.studentId=$scope.students[0].student_id;console.log($scope.studentId)}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.getMonth=function(select_month){$scope.monthId=$scope.select_month;console.log($scope.monthId);$scope.getAttendence($scope.monthId,$scope.studentId)};$scope.getAttendence=function(month,studentId){var arrPresent=new Array;var arrAbsent=new Array;var arrLeave=new Array;$scope.attData=[];reportTwoService.getAttendence(month,studentId).success(function(data,status){$scope.attData=data.donutchart;console.log(JSON.stringify(data));if($scope.attData==0){$scope.chartdata=[[],[],[]];if($scope.chartdata){ngDialog.open({template:"<p>Report is not available.</p>",plain:true})}console.log("report not available")}$scope.array=$.map($scope.attData,function(item){if(item.status=="Present"){arrPresent.push(item.status);$scope.data1=[];for(var i=0;i<arrPresent.length;i++){$scope.data1.push(arrPresent[i])}console.log($scope.data1);$scope.present=$scope.data1.length;console.log($scope.present)}else if(item.status=="Absent"){arrAbsent.push(item.status);$scope.label1=[];for(var j=0;j<arrAbsent.length;j++){$scope.label1.push(arrAbsent[j])}console.log($scope.label1);$scope.absent=$scope.label1.length;console.log($scope.absent)}else if(item.status=="On Leave"){arrLeave.push(item.status);$scope.leave1=[];for(var k=0;k<arrLeave.length;k++){$scope.leave1.push(arrLeave[k])}console.log($scope.leave1);$scope.leave=$scope.leave1.length;console.log($scope.leave)}$scope.chartdata=[[$scope.present],[$scope.absent],[$scope.leave]];return});$scope.myJson={type:"ring",title:{text:"Attendance Report"},plot:{slice:60,detach:false,tooltip:{fontSize:16,anchor:"c",x:"50%",y:"48%",sticky:true,backgroundColor:"none",text:'<span style="color:%color">%t</span><br><span style="color:%color">%v</span>'}},legend:{verticalAlign:"bottom",align:"center"},series:[{text:"present"},{text:"absent"},{text:"leave"}]}}).error(function(data,success){})};if($rootScope.role=="parent"){$scope.secId=$rootScope.student.section;$scope.getStudentValue($scope.secId)}else{$scope.getClassesInitalLoad()}}]);angular.module("school_erp").factory("reportTwoService",["$http","globalServices",function($http,globalServices){var reportTwoService={};reportTwoService.getAttendence=function(month,studentId){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/attendancechartbymonth/"+month+"/"+studentId})};return reportTwoService}]);angular.module("school_erp").controller("bookListController",["$http","$scope","$rootScope","globalServices","subjectsServices","addBookServices","ngDialog",function($http,$scope,$rootScope,globalServices,subjectsServices,addBookServices,ngDialog){$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}};$scope.data=[];addBookServices.getBook().success(function(data,status){$scope.data=data.books;console.log(JSON.stringify(data))}).error(function(data,success){});$scope.getClassesInitalLoad=function(){globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){})};$scope.populateSections=function(classId){$scope.secId=[];globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.populateSubjects($scope.secId)}).error(function(data,success){$scope.populateSubjects($scope.secId)})};$scope.populateSubjects=function(secId){$scope.subData=[];subjectsServices.getSubjects(secId).success(function(data,status){$scope.subData=data.subjects;$scope.subId=$scope.subData[0].subject_id}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.EditBook=function(value,books){console.log("messsage");$scope.books=angular.copy($scope.data[value]);var BooksDetails={book_title:$scope.books.book_title,author_name:$scope.books.author_name,book_price:$scope.books.book_price,qty:$scope.books.qty,rack_number:$scope.books.rack_number,inward_date:$scope.books.inward_date,book_description:$scope.books.book_description,subject:$scope.books.subject};console.log(BooksDetails);$scope.book_id=$scope.books.book_id;console.log($scope.book_id);$scope.addEditBook(BooksDetails,$scope.book_id)};$scope.addEditBook=function(BooksDetails,book_id){addBookServices.EditBook(BooksDetails,book_id).success(function(data,status){$scope.editdata=[];addBookServices.getBook().success(function(data,status){$scope.data=data.books}).error(function(data,success){})}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteBook=function(value){$scope.editdata=angular.copy($scope.data[value]);$scope.book_id=$scope.editdata.book_id;console.log($scope.book_id);addBookServices.DeleteBook($scope.book_id).success(function(data,status){$scope.editdata=[];addBookServices.getBook().success(function(data,status){$scope.data=data.books}).error(function(data,success){})}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};if($rootScope.role=="parent"){$scope.secId=$rootScope.student.section;$scope.populateSubjects($scope.secId)}else{$scope.getClassesInitalLoad()}}]);angular.module("school_erp").controller("chaptersController",["$http","$scope","chaptersServices","globalServices","subjectsServices","ngDialog","$rootScope",function($http,$scope,chaptersServices,globalServices,subjectsServices,ngDialog,$rootScope){$scope.chapterData=[];$scope.data=[];$scope.getClassesInitalLoad=function(){globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){})};$scope.populateSections=function(classId){$scope.secId=[];globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.populateSubjects($scope.secId)}).error(function(data,success){$scope.populateSubjects($scope.secId)})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.populateSubjects=function(secId){$scope.subData=[];subjectsServices.getSubjects(secId).success(function(data,status){$scope.subData=data.subjects;console.log(data);$scope.subId=$scope.subData[0].subject_id;$scope.getChapters($scope.subId)}).error(function(data,success){})};$scope.getChapters=function(subId){chaptersServices.getChapters(subId).success(function(data,status){console.log(subId);$scope.chaptersData=data[subId+""];console.log(JSON.stringify(data))}).error(function(data,success){})};$scope.addChapters=function(data){var chapterDetails={title:$scope.data.title,chapter_code:$scope.data.chapter_code,no_of_topics:$scope.data.no_of_topics,description:$scope.data.description};chaptersServices.setChapters(chapterDetails,$scope.subId).success(function(data,status){ngDialog.open({template:"<p>Chapters are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getChapters($scope.subId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditChapters=function(value,chapter){console.log("messsage");$scope.chapter=angular.copy($scope.chaptersData[value]);console.log($scope.chapter);$scope.chapter_id=$scope.chapter.lession_id;console.log($scope.chapter_id);var ChapterDetails={title:$scope.chapter.title,chapter_code:$scope.chapter.chapter_code,description:$scope.chapter.description,no_of_topics:$scope.chapter.no_of_topics};console.log(ChapterDetails);$scope.addEditChapters(ChapterDetails,$scope.chapter_id)};$scope.addEditChapters=function(ChapterDetails,chapter_id){chaptersServices.EditChapters(ChapterDetails,chapter_id).success(function(data,status){$scope.editdata=[];$scope.getChapters($scope.subId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteChapters=function(value){$scope.editdata=angular.copy($scope.chaptersData[value]);$scope.chapter_id=$scope.editdata.lession_id;console.log($scope.chapter_id);chaptersServices.DeleteChapters($scope.chapter_id).success(function(data,status){ngDialog.open({template:"<p>Chapter is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getChapters($scope.subId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}};if($rootScope.role=="parent"){$scope.secId=$rootScope.student.section;$scope.populateSubjects($scope.secId)}else{$scope.getClassesInitalLoad()}}]);angular.module("school_erp").factory("chaptersServices",["$http","globalServices",function($http,globalServices){var chaptersServices={};chaptersServices.getChapters=function(subjectId){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/course_works/"+subjectId})};chaptersServices.setChapters=function(dataValue,subjectId){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/course_works/"+subjectId,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};chaptersServices.EditChapters=function(dataValue,lesson_id){console.log(dataValue);console.log("hello");return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_course_work/"+lesson_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};chaptersServices.DeleteChapters=function(lesson_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_course_work/"+lesson_id})};return chaptersServices}]);angular.module("school_erp").controller("classWiseController",["$http","$scope","globalServices","subjectsServices","classWiseServices","ngDialog",function($http,$scope,globalServices,subjectsServices,classWiseServices,ngDialog){$scope.days=[{name:"Sunday",id:1},{name:"Monday",id:2},{name:"Tuesday",id:3},{name:"Wednesday",id:4},{name:"Thursday",id:5},{name:"Friday",id:6},{name:"Saturday",id:7}];$scope.data=[];globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){$scope.secId=[];globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.populateSubjects($scope.secId)}).error(function(data,success){$scope.populateSubjects($scope.secId)})};$scope.populateSubjects=function(secId){$scope.subData=[];subjectsServices.getSubjects(secId).success(function(data,status){$scope.subData=data.subjects;$scope.subId=$scope.subData[0].subject_id;$scope.getTimeTable(secId)}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.getTimeTable=function(secId){classWiseServices.getTimeTable(secId).success(function(data,status){$scope.timeTableData=[];var slots=[{time:"09:30-10:30"},{time:"10:30-11:30"},{time:"11:30-12:30"},{time:"01:30-02:30"},{time:"02:30-03:30"},{time:"03:30-04:30"}];angular.forEach(slots,function(value,key){var dataObj={start_time:value.time,data:{monday:"--",tuesday:"--",wednesday:"--",thursday:"--",friday:"--",saturday:"--",sunday:"--"}};angular.forEach(data.timetable,function(valuesub,keysub){if(valuesub.start_time==value.time){if(valuesub.day=="monday"){dataObj.data.monday=valuesub.name}else if(valuesub.day=="tuesday"){dataObj.data.tuesday=valuesub.name}else if(valuesub.day=="wednesday"){dataObj.data.wednesday=valuesub.name}else if(valuesub.day=="thursday"){dataObj.data.thursday=valuesub.name}else if(valuesub.day=="friday"){dataObj.data.friday=valuesub.name}else if(valuesub.day=="saturday"){dataObj.data.saturday=valuesub.name}else if(valuesub.day=="sunday"){dataObj.data.sunday=valuesub.name}else{}}});$scope.timeTableData.push(dataObj)});$scope.timetables=data.timetable;$scope.id=$scope.timetables.id}).error(function(data,success){})};$scope.addTimeTable=function(data){var TimeTableDetails={day:$scope.data.select_day,room_no:$scope.data.room_no,start_time:$scope.data.time_from,end_time:"4:30"};classWiseServices.setTimeTable(TimeTableDetails,$scope.secId,$scope.subId).success(function(data,status){ngDialog.open({template:"<p>TimeTable is Added Successfully.</p>",plain:true});$scope.data=[];$scope.getTimeTable($scope.secId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);angular.module("school_erp").factory("classWiseServices",["$http","globalServices",function($http,globalServices){var classWiseServices={};classWiseServices.getTimeTable=function(SecId){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/class_timetables/"+SecId})};classWiseServices.setTimeTable=function(dataValue,SecId,subId){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/class_timetable/"+SecId+"/"+subId,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};classWiseServices.EditTimeTable=function(dataValue){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};return classWiseServices}]);angular.module("school_erp").controller("dashboardController",["$http","$scope","$compile","chaptersServices","globalServices","subjectsServices","classWiseServices","NoticeBoardServices","schoolEventsServices","addVehicleServices","barChartOneService","ngDialog","$rootScope",function($http,$scope,$compile,chaptersServices,globalServices,subjectsServices,classWiseServices,NoticeBoardServices,schoolEventsServices,addVehicleServices,barChartOneService,ngDialog,$rootScope){$scope.data=[];globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){$scope.secId=[];globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.populateSubjects($scope.secId)}).error(function(data,success){$scope.populateSubjects($scope.secId)})};$scope.populateSubjects=function(secId){$scope.subData=[];subjectsServices.getSubjects(secId).success(function(data,status){$scope.subData=data.subjects;$scope.subId="SCH-9271-CL-21-SEC-26-SUB-13";$scope.getTimeTable($scope.subId)}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.getTimeTable=function(secId){classWiseServices.getTimeTable(secId).success(function(data,status){$scope.timeTableData=[];var slots=[{time:"09:30-10:30"},{time:"10:30-11:30"},{time:"11:30-12:30"},{time:"01:30-02:30"},{time:"02:30-03:30"},{time:"03:30-04:30"}];angular.forEach(slots,function(value,key){var dataObj={start_time:value.time,data:{monday:"--",tuesday:"--",wednesday:"--",thursday:"--",friday:"--",saturday:"--",sunday:"--"}};angular.forEach(data.timetable,function(valuesub,keysub){if(valuesub.start_time==value.time){if(valuesub.day=="monday"){dataObj.data.monday=valuesub.name}else if(valuesub.day=="tuesday"){dataObj.data.tuesday=valuesub.name}else if(valuesub.day=="wednesday"){dataObj.data.wednesday=valuesub.name}else if(valuesub.day=="thursday"){dataObj.data.thursday=valuesub.name}else if(valuesub.day=="friday"){dataObj.data.friday=valuesub.name}else if(valuesub.day=="saturday"){dataObj.data.saturday=valuesub.name}else if(valuesub.day=="sunday"){dataObj.data.sunday=valuesub.name}else{}}});$scope.timeTableData.push(dataObj)});$scope.timetables=data.timetable;$scope.id=$scope.timetables.id}).error(function(data,success){})};var arrData=new Array;var arrLabels=new Array;$scope.examData=[];$scope.data1=[0];$scope.label1=[0];var paperId="SCH-9271-EXM_SCH-2-EXM-17";barChartOneService.getExamMarks(paperId).success(function(data,status){$scope.examData=data.barchart;console.log(JSON.stringify($scope.examData));$scope.maxMarks=100;$scope.chartdata1=[30,20,40,80,50,40,30,60];$scope.studata1=["stu1","stu2","stu3","stu4","stu5","stu6","stu7","stu8"];console.log($scope.chartdata1);$scope.array=$.map($scope.examData,function(item){$scope.data2=JSON.parse(item.marks);arrData.push($scope.data2);arrLabels.push(item.student_name);$scope.data1=[];$scope.label1=[];for(var j=0;j<arrData.length;j++){$scope.data1.push(arrData[j])}if(arrLabels!=null){for(var i=0;i<arrLabels.length;i++){$scope.label1.push(arrLabels[i])}}console.log($scope.data1);console.log($scope.label1);return[[item.marks,item.student_name]]});$scope.myJson1={graphset:[{type:"bar","background-color":"white",title:{text:"Exam Report","font-color":"#7E7E7E",backgroundColor:"none","font-size":"22px",alpha:1,"adjust-layout":true},plotarea:{margin:"dynamic"},plot:{"bars-space-left":.15,"bars-space-right":.15,animation:{effect:"ANIMATION_SLIDE_BOTTOM",sequence:0,speed:800,delay:800}},"scale-y":{"line-color":"#7E7E7E",item:{"font-color":"#7e7e7e"},values:"0:100",guide:{visible:true},label:{"font-family":"arial",bold:true,"font-size":"14px","font-color":"#7E7E7E"}},scaleX:{values:$scope.studata1,placement:"default",tick:{size:58,placement:"cross"},itemsOverlap:true,item:{offsetY:-55}},tooltip:{visible:false},"crosshair-x":{"line-width":"100%",alpha:.18,"plot-label":{"header-text":"Name: %kv"}},series:[{values:$scope.chartdata1,alpha:.95,borderRadiusTopLeft:7,"background-color":"#8993c7",text:"Marks"}]}]}}).error(function(data,success){});addVehicleServices.getVehicle().success(function(data,status){$scope.vehicles=data.vehicles;console.log(JSON.stringify(data))}).error(function(data,success){});var mapOptions={zoom:5,center:new google.maps.LatLng(17.745875,83.314301),mapTypeId:google.maps.MapTypeId.TERRAIN};$scope.map=new google.maps.Map(document.getElementById("map"),mapOptions);$scope.markers=[];var image={url:"school_bus.png",scaledSize:new google.maps.Size(40,40),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(0,0)};infowindow=new google.maps.InfoWindow;var createMarker=function(lat,lng,id,address){var marker=new google.maps.Marker({map:$scope.map,position:new google.maps.LatLng(lat,lng),animation:google.maps.Animation.DROP,icon:image,title:"Bus Id: "+id+",   address: "+address});google.maps.event.addListener(marker,"click",function(){infowindow.setContent("<h2>"+marker.title+"</h2>");infowindow.open($scope.map,marker)});$scope.map.setZoom(18);$scope.map.panTo(marker.position);$scope.markers.push(marker)};$http.post("http://192.168.1.11:2016/netcomp/getDeviceCodeDetails",{deviceCode:$scope.code},{headers:{"Content-type":"application/json"}}).success(function(data,status){$scope.status=status;$scope.JSONdata=data;console.log(JSON.stringify(data));$scope.latitude=data.positions.latitude;$scope.longitude=data.positions.longitude;$scope.id=data.positions.deviceId;$scope.address=data.positions.address;console.log($scope.latitude);console.log($scope.longitude);createMarker($scope.latitude,$scope.longitude,$scope.id,$scope.address)}).error(function(data,status){$scope.JSONdata=data||"Request failed";$scope.status=status;console.log($scope.data+$scope.status)});NoticeBoardServices.getNoticeBoard().success(function(data,status){$scope.NoticeBoardData=data.messages;console.log(JSON.stringify(data));console.log($scope.NoticeBoardData)}).error(function(data,success){});schoolEventsServices.getEvents().success(function(data,status){angular.forEach(data.school_events,function(value,key){$scope.eventsData.push({title:value.event_title,start:new Date(value.date),end:new Date(value.date),className:value.description,allDay:false})})}).error(function(data,success){});$scope.eventsData=[];var date=new Date;var d=date.getDate();var m=date.getMonth();var y=date.getFullYear();$scope.changeTo="Hungarian";$scope.eventsF=function(start,end,timezone,callback){callback($scope.eventsData)};$scope.alertOnEventClick=function(date,jsEvent,view){$scope.alertMessage=date.title+" was clicked "};$scope.alertOnDrop=function(event,delta,revertFunc,jsEvent,ui,view){$scope.alertMessage="Event Droped to make dayDelta "+delta};$scope.alertOnResize=function(event,delta,revertFunc,jsEvent,ui,view){$scope.alertMessage="Event Resized to make dayDelta "+delta};$scope.addRemoveEventSource=function(sources,source){var canAdd=0;angular.forEach(sources,function(value,key){if(sources[key]===source){sources.splice(key,1);canAdd=1}});if(canAdd===0){sources.push(source)}};$scope.remove=function(index){$scope.eventsData.splice(index,1)};$scope.changeView=function(view,calendar){uiCalendarConfig.calendars[calendar].fullCalendar("changeView",view)};$scope.renderCalender=function(calendar){if(uiCalendarConfig.calendars[calendar]){uiCalendarConfig.calendars[calendar].fullCalendar("render")}};$scope.eventRender=function(event,element,view){element.attr({tooltip:event.title,"tooltip-append-to-body":true});$compile(element)($scope)};$scope.uiConfig={calendar:{height:450,editable:true,header:{left:"title",center:"",right:"today prev,next"},eventClick:$scope.alertOnEventClick,eventDrop:$scope.alertOnDrop,eventResize:$scope.alertOnResize,eventRender:$scope.eventRender}};$scope.changeLang=function(){if($scope.changeTo==="Hungarian"){$scope.uiConfig.calendar.dayNames=["Vasárnap","Hétfő","Kedd","Szerda","Csütörtök","Péntek","Szombat"];$scope.uiConfig.calendar.dayNamesShort=["Vas","Hét","Kedd","Sze","Csüt","Pén","Szo"];$scope.changeTo="English"}else{$scope.uiConfig.calendar.dayNames=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];$scope.uiConfig.calendar.dayNamesShort=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];$scope.changeTo="Hungarian"}};$scope.eventSources=[$scope.eventsData];console.log($scope.eventsData);$scope.eventSources2=[$scope.eventsF,$scope.eventsData];$scope.chartdata=[[70],[20],[10]];$scope.chartdata1=[[30],[50],[20]];$scope.myJson={type:"ring",title:{text:"Attendance Report"},plot:{slice:60,detach:false,tooltip:{fontSize:16,anchor:"c",x:"50%",y:"48%",sticky:true,backgroundColor:"none",text:'<span style="color:%color">%t</span><br><span style="color:%color">%v</span>'}},legend:{verticalAlign:"bottom",align:"center"},series:[{text:"present"},{text:"absent"},{text:"leave"}]}}]);angular.module("school_erp").controller("employeeController",["$http","$scope","$rootScope","employeeServices","ngDialog",function($http,$scope,$rootScope,employeeServices,ngDialog){$scope.employeeData=[];$scope.editdata=[];employeeServices.getEmployee().success(function(data,status){$scope.employeeData=data.employee}).error(function(data,success){});$scope.EditEmployee=function(value,employee){console.log("messsage");$scope.employee=angular.copy($scope.employeeData[value]);$scope.employee_id=$scope.employee.employee_id;console.log($scope.employee_id);var EmployeeDetails={gender:$scope.employee.gender,job_category:$scope.employee.job_category,experience:$scope.employee.experience,joined_on:$scope.employee.joined_on,email:$scope.employee.email,phone:$scope.employee.phone,school_id:$scope.employee.school_id};console.log(EmployeeDetails);$scope.addEditEmployee(EmployeeDetails,$scope.employee_id)};$scope.addEditEmployee=function(EmployeeDetails,employee_id){employeeServices.EditEmployee(EmployeeDetails,employee_id).success(function(data,status){$scope.editdata=[];employeeServices.getEmployee().success(function(data,status){$scope.employeeData=data.employee}).error(function(data,success){})}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteEmployee=function(value){$scope.editdata=angular.copy($scope.employeeData[value]);$scope.employee_id=$scope.editdata.employee_id;console.log($scope.employee_id);employeeServices.DeleteEmployee($scope.employee_id).success(function(data,status){ngDialog.open({template:"<p>Employee is Deleted Successfully.</p>",plain:true});$scope.editdata=[];employeeServices.getEmployee().success(function(data,status){$scope.employeeData=data.employee}).error(function(data,success){})}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);angular.module("school_erp").factory("employeeServices",["$http","globalServices",function($http,globalServices){var employeeService={};employeeService.getEmployee=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/employee/SCH-9271"})};employeeService.setEmployee=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/employee/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};employeeService.EditEmployee=function(dataValue,employee_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_employee/"+employee_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};employeeService.DeleteEmployee=function(employee_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_employee/"+employee_id})};employeeService.setAttendance=function(dataValue,Attendance){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/employee_attendance/"+Attendance,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};employeeService.setBulkAttendance=function(dataValue){var test={employees:dataValue};console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/employee_attendancebulk/SCH-9271",data:$.param(test),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};return employeeService}]);angular.module("school_erp").controller("employeeAttendanceController",["$http","$scope","employeeServices","ngDialog",function($http,$scope,employeeServices,ngDialog){$scope.employeeData=[];$scope.attendanceBox=[];$scope.employee=[];employeeServices.getEmployee().success(function(data,status){$scope.employeeData=data.employee;$scope.attendanceBox=[];$scope.attendanceStatus()}).error(function(data,success){});$scope.addAttendance=function(employee,status){var Attendance={session:"morning",status:status}
;employeeServices.setAttendance(Attendance,employee.employee_id).success(function(data,status){ngDialog.open({template:"<p> Employee Attendance  submitted successfully </p>",plain:true});$scope.data=[]}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.tickAll=function(status){$scope.attendanceBox.forEach(function(element){if(status){element.selected=true}else{element.selected=false}})};$scope.markAttendance=function(status){$scope.attendanceBox.forEach(function(element){if(element.selected){element.status=status}})};$scope.attendanceStatus=function(){$scope.employeeData.forEach(function(element){var obj={employee_id:element.employee_id,first_name:element.first_name,last_name:element.last_name,gender:element.gender,job_category:element.job_category,selected:false,status:"none"};$scope.attendanceBox.push(obj)})};$scope.sendAttendanceHolder=[];$scope.submitBulkAttendance=function(){var allowSubmission=false;var dataB=$scope.attendanceBox;var i=0;var filterBox=dataB.filter(function(data){return data.status=="none"});if(filterBox.length==0){$scope.attendanceBox.forEach(function(element){var obj={employee_id:element.employee_id,status:element.status};$scope.sendAttendanceHolder.push(obj)});employeeServices.setBulkAttendance($scope.sendAttendanceHolder)}else{ngDialog.open({template:"<p> Few students are not marked properly</p>",plain:true})}}}]);angular.module("school_erp").controller("employeeDetailsController",["$http","$scope","employeeServices","ngDialog",function($http,$scope,employeeServices,ngDialog){$scope.employeeDetailsData=[];$scope.data=[];$scope.today1="01/01/1975";$scope.addEmployee=function(data){var empDetails={first_name:$scope.data.first_name,last_name:$scope.data.last_name,dob:$scope.data.dob,job_category:$scope.data.jobType,experience:$scope.data.experience,phone:$scope.data.phone,email:$scope.data.email,profile_image:"imageData",website:$scope.data.website,joined_on:$scope.data.joined_on,gender:$scope.data.gender,experience:$scope.data.experience,website:$scope.data.website,qualification:$scope.data.qualification};employeeServices.setEmployee(empDetails).success(function(data,status){ngDialog.open({template:"<p>Employeee Added Successfully.</p>",plain:true});$scope.data=[]}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})}}]);angular.module("school_erp").controller("evaluationsController",["$http","$scope","globalServices","examServices","subjectsServices","studentServices","ngDialog",function($http,$scope,globalServices,examServices,subjectsServices,studentServices,ngDialog){$scope.evalData=[];$scope.data=[];globalServices.getClass().success(function(data,status){console.log(JSON.stringify(data));$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){console.log(JSON.stringify(data));$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getSubjects($scope.secId)}).error(function(data,success){})};examServices.getExamSchedule().success(function(data,status){console.log(JSON.stringify(data));$scope.examSchedule=data.exam_schedules;$scope.examScheduleId=$scope.examSchedule[0].exam_sch_id}).error(function(data,success){});$scope.getSubjects=function(secId){subjectsServices.getSubjects(secId).success(function(data,status){console.log(JSON.stringify(data));$scope.subjectsData=data.subjects;$scope.subjectId=$scope.subjectsData[0].subject_id;$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)}).error(function(data,success){})};$scope.getExamPapers=function(examSubject,exSchedule){examServices.getExamPapers(examSubject,exSchedule).success(function(data,status){console.log("message");console.log(JSON.stringify(data));$scope.papers=data[exSchedule+"-"+examSubject];$scope.paperId=$scope.papers[0].exam_paper_id;$scope.paper_name=$scope.papers[0].exam_paper_title;console.log($scope.paper_name);$scope.getStudentValue($scope.secId)}).error(function(data,success){})};$scope.getStudentValue=function(secValue){studentServices.getStudent(secValue).success(function(data,status){console.log(JSON.stringify(data));$scope.students=data.students;$scope.studentId=$scope.students[0].student_id;$scope.getEvaluation($scope.paperId,$scope.studentId)}).error(function(data,success){})};$scope.getEvaluation=function(examPaper,student){examServices.getEvaluation(examPaper,student).success(function(data,status){console.log(JSON.stringify(data));$scope.evalData=data[examPaper+"-"+student]}).error(function(data,success){})};$scope.addEvaluation=function(data){var evalDetails={subject_name:$scope.data.subject_name,examschedule_name:$scope.data.examSchedule_name,paper_name:$scope.data.paper_name,marks:$scope.data.marks,percentage:$scope.data.percentage,conduct:$scope.data.conduct,comment:$scope.data.comment};console.log(evalDetails);examServices.setEvaluation(evalDetails,$scope.paperId,$scope.studentId).success(function(data,status){ngDialog.open({template:"<p>ExamPapers are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getEvaluation($scope.paperId,$scope.studentId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteEvaluation=function(value){$scope.editdata=angular.copy($scope.evalData[value]);$scope.paper_result_id=$scope.editdata.paper_result_id;console.log($scope.paper_result_id);examServices.DeleteEvaluation($scope.paper_result_id).success(function(data,status){ngDialog.open({template:"<p>Evaluation data is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getEvaluation($scope.paperId,$scope.studentId,$scope.subjectId,$scope.examScheduleId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditEvaluation=function(value,evaluatievaluationsons){console.log("messsage");$scope.evaluations=angular.copy($scope.evalData[value]);$scope.paper_result_id=$scope.evaluations.paper_result_id;console.log($scope.paper_result_id);var EvaluationsDetails={student_name:$scope.evaluations.student_name,exam_paper_title:$scope.evaluations.exam_paper_title,student_name:$scope.evaluations.student_name,student_name:$scope.evaluations.student_name,marks:$scope.evaluations.marks,percentage:$scope.evaluations.percentage,conduct:$scope.evaluations.conduct};console.log(EvaluationsDetails);$scope.addEditEvaluation(EvaluationsDetails,$scope.paper_result_id)};$scope.addEditEvaluation=function(EvaluationsDetails,paper_result_id){examServices.EditEvaluation(EvaluationsDetails,paper_result_id).success(function(data,status){$scope.editdata=[];$scope.getEvaluation($scope.paperId,$scope.studentId,$scope.subjectId,$scope.examScheduleId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);angular.module("school_erp").controller("examPapersController",["$http","$scope","examServices","ngDialog","globalServices","subjectsServices",function($http,$scope,examServices,ngDialog,globalServices,subjectsServices){$scope.data=[];globalServices.getClass().success(function(data,status){$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getSubjects($scope.secId)}).error(function(data,success){})};$scope.populateExams=function(){$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)};examServices.getExamSchedule().success(function(data,status){$scope.examSchedule=data.exam_schedules;$scope.examScheduleId=$scope.examSchedule[0].exam_sch_id}).error(function(data,success){});$scope.getExamPapers=function(examSubject,exSchedule){examServices.getExamPapers(examSubject,exSchedule).success(function(data,status){$scope.examData=data[exSchedule+"-"+examSubject];console.log(JSON.stringify(data))}).error(function(data,success){})};$scope.addExamPapers=function(data){var examDetails={subject_name:$scope.data.subject_name,exam_paper_title:$scope.data.exam_paper_title,date:$scope.data.date,start_time:$scope.data.time_from,end_time:$scope.data.time_to,max_marks:$scope.data.max_marks};console.log();examServices.setExamPapers(examDetails,$scope.subjectId,$scope.examScheduleId).success(function(data,status){ngDialog.open({template:"<p>ExamPapers are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getSubjects=function(secId){subjectsServices.getSubjects(secId).success(function(data,status){console.log(JSON.stringify(data));$scope.subjectsData=data.subjects;$scope.subjectId=$scope.subjectsData[0].subject_id;$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.EditExamPapers=function(value,exam){console.log("messsage");$scope.exam=angular.copy($scope.examData[value]);$scope.exam_paper_id=$scope.exam.exam_paper_id;console.log($scope.exam_paper_id);var Exam_PaperDetails={subject_name:$scope.exam.subject_name,exam_paper_title:$scope.exam.exam_paper_title,max_marks:$scope.exam.max_marks,date:$scope.exam.date,start_time:$scope.exam.start_time,end_time:$scope.exam.end_time};console.log(Exam_PaperDetails);$scope.addEditExamPapers(Exam_PaperDetails,$scope.exam_paper_id)};$scope.addEditExamPapers=function(Exam_PaperDetails,exam_paper_id){examServices.EditExamPapers(Exam_PaperDetails,exam_paper_id).success(function(data,status){console.log(JSON.stringify(data));$scope.editdata=[];$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteExamPapers=function(value){$scope.editdata=angular.copy($scope.examData[value]);$scope.exam_paper_id=$scope.editdata.exam_paper_id;console.log($scope.exam_paper_id);examServices.DeleteExamPapers($scope.exam_paper_id).success(function(data,status){ngDialog.open({template:"<p>Exam Paper is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);angular.module("school_erp").controller("barChartOneController",["$http","$scope","globalServices","examServices","subjectsServices","studentServices","barChartOneService","ngDialog",function($http,$scope,globalServices,examServices,subjectsServices,studentServices,barChartOneService,ngDialog){$scope.evalData=[];$scope.data=[];globalServices.getClass().success(function(data,status){$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;console.log($scope.classId);$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getSubjects($scope.secId)}).error(function(data,success){})};examServices.getExamSchedule().success(function(data,status){$scope.examSchedule=data.exam_schedules;$scope.examScheduleId=$scope.examSchedule[0].exam_sch_id}).error(function(data,success){});$scope.getSubjects=function(secId){subjectsServices.getSubjects(secId).success(function(data,status){$scope.subjectsData=data.subjects;$scope.subjectId=$scope.subjectsData[0].subject_id;$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)}).error(function(data,success){})};$scope.getExamPapers=function(examSubject,exSchedule){examServices.getExamPapers(examSubject,exSchedule).success(function(data,status){$scope.papers=data[exSchedule+"-"+examSubject];$scope.paperId=$scope.papers[0].exam_paper_id;console.log($scope.paperId);$scope.getExamMarks($scope.paperId)}).error(function(data,success){})};$scope.getExamMarks=function(paperId){var arrData=new Array;var arrLabels=new Array;$scope.examData=[];$scope.data1=[0];$scope.label1=[0];barChartOneService.getExamMarks(paperId).success(function(data,status){$scope.examData=data.barchart;console.log(JSON.stringify($scope.examData));$scope.maxMarks=100;$scope.chartdata1=[30,20,40,80,50,40,30,60];$scope.studata1=["stu1","stu2","stu3","stu4","stu5","stu6","stu7","stu8"];console.log($scope.chartdata1);$scope.array=$.map($scope.examData,function(item){$scope.data2=JSON.parse(item.marks);arrData.push($scope.data2);arrLabels.push(item.student_name);$scope.data1=[];$scope.label1=[];for(var j=0;j<arrData.length;j++){$scope.data1.push(arrData[j])}if(arrLabels!=null){for(var i=0;i<arrLabels.length;i++){$scope.label1.push(arrLabels[i])}}console.log($scope.data1);console.log($scope.label1);return[[item.marks,item.student_name]]});$scope.myJson={graphset:[{type:"bar","background-color":"white",title:{text:"Examinations Report","font-color":"#7E7E7E",backgroundColor:"none","font-size":"22px",alpha:1,"adjust-layout":true},plotarea:{margin:"dynamic"},plot:{"bars-space-left":.15,"bars-space-right":.15,animation:{effect:"ANIMATION_SLIDE_BOTTOM",sequence:0,speed:800,delay:800}},"scale-y":{"line-color":"#7E7E7E",item:{"font-color":"#7e7e7e"},values:"0:100",guide:{visible:true},label:{"font-family":"arial",bold:true,"font-size":"14px","font-color":"#7E7E7E"}},scaleX:{values:$scope.label1,placement:"default",tick:{size:58,placement:"cross"},itemsOverlap:true,item:{offsetY:-55}},tooltip:{visible:false},"crosshair-x":{"line-width":"100%",alpha:.18,"plot-label":{"header-text":"Name: %kv"}},series:[{values:$scope.data1,alpha:.95,borderRadiusTopLeft:7,"background-color":"#8993c7",text:"Marks"}]}]}}).error(function(data,success){})}}]);angular.module("school_erp").factory("barChartOneService",["$http","globalServices",function($http,globalServices){var barChartOneService={};barChartOneService.getExamMarks=function(paperId){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/examevaluation/"+paperId})};return barChartOneService}]);angular.module("school_erp").controller("barChartTwoController",["$http","$scope","globalServices","examServices","subjectsServices","studentServices","barChartTwoService","ngDialog",function($http,$scope,globalServices,examServices,subjectsServices,studentServices,barChartTwoService,ngDialog){$scope.evalData=[];$scope.data=[];globalServices.getClass().success(function(data,status){$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;console.log($scope.classId);$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getSubjects($scope.secId)}).error(function(data,success){})};examServices.getExamSchedule().success(function(data,status){$scope.examSchedule=data.exam_schedules;$scope.examScheduleId=$scope.examSchedule[0].exam_sch_id;console.log($scope.examScheduleId)}).error(function(data,success){});$scope.getSubjects=function(secId){subjectsServices.getSubjects(secId).success(function(data,status){$scope.subjectsData=data.subjects;$scope.subjectId=$scope.subjectsData[0].subject_id;$scope.getExamPapers($scope.subjectId,$scope.examScheduleId)}).error(function(data,success){})};$scope.getExamPapers=function(examSubject,exSchedule){examServices.getExamPapers(examSubject,exSchedule).success(function(data,status){$scope.papers=data[exSchedule+"-"+examSubject];$scope.paperId=$scope.papers[0].exam_paper_id;console.log($scope.paperId);$scope.getStudentValue($scope.secId)}).error(function(data,success){})};$scope.getStudentValue=function(secValue){studentServices.getStudent(secValue).success(function(data,status){$scope.students=data.students;$scope.studentId=$scope.students[0].student_id;console.log(JSON.stringify(data));console.log($scope.studentId);$scope.getExamMarks($scope.paperId,$scope.studentId)}).error(function(data,success){})};$scope.getExamMarks=function(examScheduleId,studentId){barChartTwoService.getExamMarks(examScheduleId,studentId).success(function(data,status){$scope.examData=data.barchart;console.log(JSON.stringify(data));$scope.chartdata=$scope.examData[0].exams.max_marks;console.log($scope.chartdata)}).error(function(data,success){})};$scope.myJson={type:"bar",title:{backgroundColor:"transparent",fontColor:"black"},backgroundColor:"white",series:[{text:"present",backgroundColor:"#4DC0CF"}]}}]);angular.module("school_erp").factory("barChartTwoService",["$http","globalServices",function($http,globalServices){var barChartTwoService={};barChartTwoService.getExamMarks=function(examScheduleId,studentId){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/examevaluationlistbystudentid/"+examScheduleId+"/"+studentId})};return barChartTwoService}]);angular.module("school_erp").factory("examServices",["$http","globalServices",function($http,globalServices){var examServices={};examServices.getExamSchedule=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/exam_schedule/SCH-9271"})};examServices.setExamSchedule=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/exam_schedule/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};examServices.EditExamSchedule=function(dataValue,exam_sch_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_examschedule/"+exam_sch_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};examServices.DeleteExamSchedule=function(exam_sch_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_examschedule/"+exam_sch_id})};examServices.getExamPapers=function(examSubject,exSchedule){console.log(examSubject+"/"+exSchedule);return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/exams/"+examSubject+"/"+exSchedule})};examServices.setExamPapers=function(dataValue,examSubject,exSchedule){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/exams/"+examSubject+"/"+exSchedule,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};examServices.EditExamPapers=function(dataValue,exam_paper_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_exam_paper/"+exam_paper_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};examServices.DeleteExamPapers=function(exam_paper_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_exam_paper/"+exam_paper_id})};examServices.getEvaluation=function(examPaper,student){console.log(examPaper+"/"+student);return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/exam_eval/"+examPaper+"/"+student})};examServices.setEvaluation=function(dataValue,examPaperId,student){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/exam_eval/"+examPaperId+"/"+student,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};examServices.EditEvaluation=function(dataValue,paper_result_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_exam_evalution/"+paper_result_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};examServices.DeleteEvaluation=function(paper_result_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_exam_evalution/"+paper_result_id})};return examServices}]);angular.module("school_erp").controller("examSchedulesController",["$http","$scope","examServices","ngDialog","globalServices",function($http,$scope,examServices,ngDialog,globalServices){$scope.examData=[];$scope.today1="01/01/1975";$scope.data=[];globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id}).error(function(data,success){})};$scope.populateExams=function(secId){$scope.getExamPapers($scope.secId)};$scope.getExamScheduleData=function(){examServices.getExamSchedule().success(function(data,status){$scope.examData=data.exam_schedules}).error(function(data,success){})};$scope.addExamSchedule=function(data){var examDetails={exam_title:$scope.data.exam_title,exam_classes:$scope.data.exam_classes,from_date:$scope.data.from_date};examServices.setExamSchedule(examDetails).success(function(data,status){ngDialog.open({template:"<p>ExamSchedules are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getExamScheduleData()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditExamSchedule=function(value,exam){console.log("messsage");$scope.exam=angular.copy($scope.examData[value]);$scope.exam_sch_id=$scope.exam.exam_sch_id;console.log($scope.exam_sch_id);var Exam_SchDetails={exam_title:$scope.exam.exam_title,exam_classes:$scope.exam.exam_classes,from_date:$scope.exam.from_date};console.log(Exam_SchDetails);$scope.addEditExamSchedule(Exam_SchDetails,$scope.exam_sch_id)};$scope.addEditExamSchedule=function(Exam_SchDetails,exam_sch_id){examServices.EditExamSchedule(Exam_SchDetails,exam_sch_id).success(function(data,status){$scope.editdata=[];$scope.getExamScheduleData()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getExamScheduleData();$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.DeleteExamSchedule=function(value){$scope.editdata=angular.copy($scope.examData[value]);$scope.exam_sch_id=$scope.editdata.exam_sch_id;console.log($scope.exam_sch_id);examServices.DeleteExamSchedule($scope.exam_sch_id).success(function(data,status){ngDialog.open({template:"<p>Exam Schedule is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getExamScheduleData()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);angular.module("school_erp").controller("libraryRulesController",["$http","$scope",function($http,$scope){$scope.libraryRules=[];$scope.getlibraryRules=function(){examServices.getlibraryRules().success(function(data,status){$scope.libraryData=data.boo}).error(function(data,success){})};$scope.addlibraryRules=function(data){var bookDetails={book_title:$scope.data.book_title,author_name:$scope.data.author_name,book_price:$scope.data.book_price,qty:$scope.data.qty,rack_number:$scope.data.rack_number,inward_date:$scope.data.inward_date,book_description:$scope.data.book_description,subject:$scope.data.subject};libraryRulesServices.setlibraryRules(bookDetails).success(function(data,status){ngDialog.open({template:"<p>ExamSchedules are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getlibraryRules()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditlibraryRules=function(editdata){var bookDetails={book_title:$scope.data.book_title,author_name:$scope.data.author_name,book_price:$scope.data.book_price,qty:$scope.data.qty,rack_number:$scope.data.rack_number,inward_date:$scope.data.inward_date,book_description:$scope.data.book_description,subject:$scope.data.subject};examServices.EditlibraryRules(bookDetails).success(function(data,status){ngDialog.open({template:"<p>ExamSchedules are Edited Successfully.</p>",plain:true});$scope.examData=[];$scope.getlibraryRules()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getlibraryRules();$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)}}]);angular.module("school_erp").factory("libraryRulesServices",["$http","globalServices",function($http,globalServices){var libraryRulesServices={};libraryRulesServices.getlibraryRules=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"/api/book/"})};libraryRulesServices.setlibraryRules=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"/api/book/",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};libraryRulesServices.EditlibraryRules=function(dataValue){console.log(dataValue);return $http({method:"EDIT",url:globalServices.globalValue.baseURL+"/book_edit/:book_id/:name/:value",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};return libraryRulesServices}]);angular.module("school_erp").controller("loginController",["$http","$scope","$rootScope","authService","$state","ngDialog","$window",function($http,$scope,$rootScope,authService,$state,ngDialog,$window){$scope.datab=[];$scope.login=function(data){var dataValue={email:$scope.datab.username,password:$scope.datab.password};authService.login(dataValue).success(function(data,status){console.log(data);$scope.loginData=data.role;console.log($scope.loginData);if(status!=401){$window.localStorage["userInfo"]=JSON.stringify(data);$rootScope.role=data.role;$rootScope.loginPage=false;$state.go("main.dashboard")}}).error(function(data,success){$scope.datab={};console.log(JSON.stringify(data));ngDialog.open({template:"<p>"+data+"</p>",plain:true})})};$scope.logout=function(){authService.logout();$state.go("login")}}]);angular.module("school_erp").factory("authService",["$http","globalServices","$q","$window","$rootScope",function($http,globalServices,$q,$window,$rootScope){var authService={};authService.login=function(dataValue){return $http({method:"POST",url:globalServices.globalValue.baseURL+"signin",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};authService.logout=function(){$window.localStorage["userInfo"]=null;$window.localStorage["role"]=null};authService.getUserInfo=function(){var userInfo;if($window.localStorage["userInfo"]){userInfo=JSON.parse($window.localStorage["userInfo"]);if(userInfo!=null){$rootScope.role=userInfo.role;$rootScope.users=userInfo.users;if($rootScope.role=="parent"){if($rootScope.users.length>0&&!$window.localStorage["student"]){$window.localStorage["student"]=JSON.stringify($rootScope.users[0]);$rootScope.student=$rootScope.users[0]}else{$rootScope.student=JSON.parse($window.localStorage["student"])}}}else{$rootScope.role="";$window.localStorage["userInfo"]=null}}return userInfo};return authService}])
;angular.module("school_erp").controller("noticeboardController",["$http","$scope","$rootScope","globalServices","NoticeBoardServices","ngDialog",function($http,$scope,$rootScope,globalServices,NoticeBoardServices,ngDialog){$scope.NoticeBoardData=[];$scope.editdata=[];NoticeBoardServices.getNoticeBoard().success(function(data,status){$scope.NoticeBoardData=data.messages;console.log(JSON.stringify(data));console.log($scope.NoticeBoardData)}).error(function(data,success){});$scope.addNoticeBoard=function(data){console.log("message");var NoticeBoardDetails={subject:$scope.data.subject,messages:$scope.data.message,date:(new Date).toDateString()};NoticeBoardServices.setNoticeBoard(NoticeBoardDetails).success(function(data,status){ngDialog.open({template:"<p>Notice Added Successfully.</p>",plain:true});$scope.data=[];NoticeBoardServices.getNoticeBoard().success(function(data,status){$scope.NoticeBoardData=data.messages;console.log(JSON.stringify(data));console.log($scope.NoticeBoardData)}).error(function(data,success){})}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditNoticeBoard=function(value,noticeboard){console.log("messsage");$scope.noticeboard=angular.copy($scope.NoticeBoardData[value]);$scope.message_id=$scope.noticeboard.message_id;console.log($scope.message_id);var NoticeBoardDetails={subject:$scope.noticeboard.subject,messages:$scope.noticeboard.messages,date:$scope.noticeboard.date};console.log(NoticeBoardDetails);$scope.addEditEmployee(NoticeBoardDetails,$scope.message_id)};$scope.addEditNoticeBoard=function(NoticeBoardDetails,message_id){NoticeBoardServices.EditNoticeBoard(NoticeBoardDetails,message_id).success(function(data,status){$scope.editdata=[];NoticeBoardServices.getNoticeBoard().success(function(data,status){$scope.NoticeBoardData=data.noticeboard}).error(function(data,success){})}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteNoticeBoard=function(value){$scope.editdata=angular.copy($scope.NoticeBoardData[value]);$scope.message_id=$scope.editdata.message_id;console.log($scope.message_id);NoticeBoardServices.DeleteNoticeBoard($scope.message_id).success(function(data,status){ngDialog.open({template:"<p>Notice is Deleted Successfully.</p>",plain:true});$scope.editdata=[];NoticeBoardServices.getNoticeBoard().success(function(data,status){$scope.NoticeBoardData=data.noticeboard}).error(function(data,success){})}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.data=[{agence:"CTM",secteur:"Safi",statutImp:"operationnel"}];$scope.export=function(){html2canvas(document.getElementById("exportthis"),{onrendered:function(canvas){var data=canvas.toDataURL();var docDefinition={content:[{image:"data/image1.png",height:150,width:500}]};pdfMake.createPdf(docDefinition).download("Score_Details.pdf")}})};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);angular.module("school_erp").factory("NoticeBoardServices",["$http","globalServices",function($http,globalServices){var NoticeBoardServices={};NoticeBoardServices.getNoticeBoard=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/noticeboard/SCH-9271"})};NoticeBoardServices.setNoticeBoard=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/noticeboard/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};return NoticeBoardServices}]);angular.module("school_erp").controller("routeGeoLocationController",["$http","$scope","addVehicleServices",function($http,$scope,addVehicleServices){$scope.code=900;addVehicleServices.getVehicle().success(function(data,status){$scope.vehicles=data.vehicles}).error(function(data,success){});var mapOptions={zoom:5,center:new google.maps.LatLng(17.745875,83.314301),mapTypeId:google.maps.MapTypeId.TERRAIN};$scope.map=new google.maps.Map(document.getElementById("map"),mapOptions);$scope.markers=[];var image={url:"school_bus.png",scaledSize:new google.maps.Size(40,40),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(0,0)};infowindow=new google.maps.InfoWindow;var createMarker=function(lat,lng,id,address){var marker=new google.maps.Marker({map:$scope.map,position:new google.maps.LatLng(lat,lng),animation:google.maps.Animation.DROP,icon:image,title:"Bus Id: "+id+",   address: "+address});google.maps.event.addListener(marker,"click",function(){infowindow.setContent("<h2>"+marker.title+"</h2>");infowindow.open($scope.map,marker)});$scope.map.setZoom(18);$scope.map.panTo(marker.position);$scope.markers.push(marker)};$http({method:"GET",url:"http://192.168.1.4:2016/api/netcomp/getAllDevicesDetails"}).success(function(data,status){$scope.status=status;$scope.JSONdata=data;console.log(JSON.stringify(data));$scope.latitude=data.positions.latitude;$scope.longitude=data.positions.longitude;$scope.id=data.positions.deviceId;$scope.address=data.positions.address;console.log($scope.latitude);console.log($scope.longitude);createMarker($scope.latitude,$scope.longitude,$scope.id,$scope.address)}).error(function(data,status){$scope.JSONdata=data||"Request failed";$scope.status=status;console.log($scope.data+$scope.status)})}]);angular.module("school_erp").factory("routeGeoLocationServices",["$http","globalServices",function($http,globalServices){var routeGeoLocationServices={};routeGeoLocationServices.getNoticeBoard=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/noticeboard/SCH-9271"})};routeGeoLocationServices.setNoticeBoard=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/noticeboard/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};return routeGeoLocationServices}]);angular.module("school_erp").controller("schoolEventsController",["$http","$scope","$rootScope","$compile","uiCalendarConfig","schoolEventsServices","ngDialog",function($http,$scope,$rootScope,$compile,uiCalendarConfig,schoolEventsServices,ngDialog){$scope.eventsData=[];var date=new Date;var d=date.getDate();var m=date.getMonth();var y=date.getFullYear();$scope.changeTo="Hungarian";$scope.eventsF=function(start,end,timezone,callback){callback($scope.eventsData)};$scope.alertOnEventClick=function(date,jsEvent,view){$scope.alertMessage=date.title+" was clicked "};$scope.alertOnDrop=function(event,delta,revertFunc,jsEvent,ui,view){$scope.alertMessage="Event Droped to make dayDelta "+delta};$scope.alertOnResize=function(event,delta,revertFunc,jsEvent,ui,view){$scope.alertMessage="Event Resized to make dayDelta "+delta};$scope.addRemoveEventSource=function(sources,source){var canAdd=0;angular.forEach(sources,function(value,key){if(sources[key]===source){sources.splice(key,1);canAdd=1}});if(canAdd===0){sources.push(source)}};$scope.addEvent=function(data){console.log($scope.eventsData);var EventDetails={event_title:$scope.data.event_name,date:$scope.data.date,time:$scope.data.time,description:$scope.data.description};schoolEventsServices.setEvents(EventDetails).success(function(successdata,status){ngDialog.open({template:"<p>SchoolEvents are added Successfully.</p>",plain:true});$scope.data={};$scope.getEvent()}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.getEvent=function(){schoolEventsServices.getEvents().success(function(data,status){angular.forEach(data.school_events,function(value,key){$scope.eventsData.push({title:value.event_title,start:new Date(value.date),end:new Date(value.date),className:value.description,allDay:false})})}).error(function(data,success){})};$scope.remove=function(index){$scope.eventsData.splice(index,1)};$scope.changeView=function(view,calendar){uiCalendarConfig.calendars[calendar].fullCalendar("changeView",view)};$scope.renderCalender=function(calendar){if(uiCalendarConfig.calendars[calendar]){uiCalendarConfig.calendars[calendar].fullCalendar("render")}};$scope.eventRender=function(event,element,view){element.attr({tooltip:event.title,"tooltip-append-to-body":true});$compile(element)($scope)};$scope.uiConfig={calendar:{height:450,editable:true,header:{left:"title",center:"",right:"today prev,next"},eventClick:$scope.alertOnEventClick,eventDrop:$scope.alertOnDrop,eventResize:$scope.alertOnResize,eventRender:$scope.eventRender}};$scope.changeLang=function(){if($scope.changeTo==="Hungarian"){$scope.uiConfig.calendar.dayNames=["Vasárnap","Hétfő","Kedd","Szerda","Csütörtök","Péntek","Szombat"];$scope.uiConfig.calendar.dayNamesShort=["Vas","Hét","Kedd","Sze","Csüt","Pén","Szo"];$scope.changeTo="English"}else{$scope.uiConfig.calendar.dayNames=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];$scope.uiConfig.calendar.dayNamesShort=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];$scope.changeTo="Hungarian"}};$scope.eventSources=[$scope.eventsData];console.log($scope.eventsData);$scope.eventSources2=[$scope.eventsF,$scope.eventsData];$scope.getEvent()}]);angular.module("school_erp").factory("schoolEventsServices",["$http","globalServices",function($http,globalServices){var schoolEventsServices={};schoolEventsServices.getEvents=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/schoolevents/SCH-9271"})};schoolEventsServices.setEvents=function(dataValue){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/schoolevents/SCH-9271",data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};return schoolEventsServices}]);angular.module("school_erp").directive("exportTable",function(){var link=function($scope,elm,attr){$scope.$on("export-pdf",function(e,d){elm.tableExport({type:"pdf",escape:false})});$scope.$on("export-excel",function(e,d){elm.tableExport({type:"excel",escape:false})})};return{link:link}}).directive("ngConfirmClick",["$window",function($window){return{link:function(scope,element,attr){var msg=attr.ngConfirmClick||"Are you sure?";var clickAction=attr.confirmedClick;element.bind("click",function(event){if(window.confirm(msg)){scope.$eval(clickAction)}})}}}]);angular.module("school_erp").factory("globalServices",["$http","$rootScope",function($http,$rootScope){var globalServices={};globalServices.globalValue={baseURL:"http://ec2-52-40-213-254.us-west-2.compute.amazonaws.com:4005/",schoolID:"",role:"teacher"};globalServices.fetchRoleAuth=function(roles){var i=0;var retVal;while(i<=roles.length){if(roles[i]==$rootScope.role){retVal=true;break}else{retVal=false}i++}return retVal};globalServices.getClass=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/school_classes/SCH-9271"})};globalServices.getSections=function(classID){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/class_sections/"+classID})};globalServices.getBusRoutes=function(){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/bus_route/SCH-9271"})};return globalServices}]);angular.module("school_erp").controller("headController",["$http","$scope","$rootScope","authService","$state","ngDialog","$window",function($http,$scope,$rootScope,authService,$state,ngDialog,$window){$scope.logout=function(){authService.logout();$state.go("login_page")}}]);angular.module("school_erp").controller("sideController",["$http","$scope","$rootScope","authService","$state","ngDialog","$window","$filter",function($http,$scope,$rootScope,authService,$state,ngDialog,$window,$filter){$scope.setRole=function(value){if(value==$rootScope.role){return true}else{return false}};if($rootScope.role=="parent"){$scope.studentSelection=$rootScope.student._id;$scope.changeStudent=function(student){$scope.items=$filter("filter")($rootScope.users,student,true);$window.localStorage["student"]=JSON.stringify($scope.items[0]);$state.reload()}}}]);angular.module("school_erp").controller("studentController",["$http","$scope","$rootScope","studentServices","globalServices","ngDialog",function($http,$scope,$rootScope,studentServices,globalServices,ngDialog){$scope.studentData=[];globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;console.log(JSON.stringify(data));$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getStudentValue($scope.secId)}).error(function(data,success){})};globalServices.getBusRoutes().success(function(data,status){$scope.routes=data.bus_routes}).error(function(data,success){});$scope.getStudentValue=function(secValue){studentServices.getStudent(secValue).success(function(data,status){$scope.studentData=data.students;console.log(JSON.stringify(data))}).error(function(data,success){})};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};$scope.EditStudent=function(value,student){console.log("messsage");$scope.student=angular.copy($scope.studentData[value]);$scope.student_id=$scope.student.student_id;console.log($scope.student_id);var StudentDetails={class_id:$scope.student.class_id,dob:$scope.student.dob,gender:$scope.student.gender,category:$scope.student.category,phone:$scope.student.phone};console.log(StudentDetails);$scope.addEditStudent(StudentDetails,$scope.student_id)};$scope.addEditStudent=function(StudentDetails,student_id){studentServices.EditStudent(StudentDetails,student_id).success(function(data,status){$scope.editdata=[];$scope.getStudentValue($scope.secId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteStudent=function(value){$scope.editdata=angular.copy($scope.studentData[value]);$scope.student_id=$scope.editdata.student_id;console.log($scope.student_id);studentServices.DeleteStudent($scope.student_id).success(function(data,status){ngDialog.open({template:"<p>Student is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getStudentValue($scope.secId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);angular.module("school_erp").factory("studentServices",["$http","globalServices",function($http,globalServices){var studentServices={};studentServices.getStudent=function(classSecValue){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/students/"+classSecValue})};studentServices.setStudent=function(dataValue,classSecToAdd){return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/students/"+classSecToAdd,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};studentServices.setAttendance=function(dataValue,classToAdd){return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/attendance/"+classToAdd,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};studentServices.getStudents=function(classSecValue){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/students/"+classSecValue})};studentServices.setBulkAttendance=function(dataValue,classVal,section){var test={employees:dataValue};console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/attendancebulk/"+classVal+"/"+section+"/"+"SCH-9271",data:$.param(test),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};studentServices.EditStudent=function(dataValue,student_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_students/"+student_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};studentServices.DeleteStudent=function(student_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_student/"+student_id})};return studentServices}]);angular.module("school_erp").controller("studentAdmissionController",["$http","$scope","studentServices","ngDialog","globalServices","BusRouteServices",function($http,$scope,studentServices,ngDialog,globalServices,BusRouteServices){$scope.classData=[];$scope.data=[];BusRouteServices.getBusRoute().success(function(data,status){$scope.busRoutes=data.bus_routes;$scope.routeId=$scope.busRoutes[0].route_id}).error(function(data,success){});globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id}).error(function(data,success){})};$scope.addStudent=function(data){var stdAdmission={surname:$scope.data.surname,first_name:$scope.data.first_name,last_name:$scope.data.last_name,gender:$scope.data.gender,religion:$scope.data.religion,dob:$scope.data.dob,aadhar_no:$scope.data.aadhar_no,phone:$scope.data.phone,email:$scope.data.email,category:$scope.data.category,admission_date:$scope.data.admission_date,admission_no:$scope.data.admission_no,roll_no:$scope.data.roll_no,academic_year:$scope.data.academic_year,bus_route_id:$scope.data.bus_route_id,cur_address:$scope.data.cur_address,cur_city:$scope.data.cur_city,cur_state:$scope.data.cur_state,cur_pincode:$scope.data.cur_pincode,cur_long:$scope.data.cur_long,cur_lat:$scope.data.cur_lat,perm_address:$scope.data.perm_address,perm_city:$scope.data.perm_city,perm_state:$scope.data.perm_state,perm_pincode:$scope.data.perm_pincode,perm_long:$scope.data.perm_long,perm_lat:$scope.data.perm_lat,father_name:$scope.data.father_name,father_contact:$scope.data.father_contact,father_occupation:$scope.data.father_occupation,mother_name:$scope.data.mother_name,mother_contact:$scope.data.mother_contact,mother_occupation:$scope.data.mother_occupation,gaurdian_name:$scope.data.gaurdian_name,gaurdian_contact:$scope.data.gaurdian_contact,gaurdian_relation:$scope.data.gaurdian_relation,gaurdian_address:$scope.data.gaurdian_address,gaurdian_occupation:$scope.data.gaurdian_occupation};studentServices.setStudent(stdAdmission,$scope.secId).success(function(data,status){ngDialog.open({template:"<p> Student Information  submitted successfully </p>",plain:true});$scope.data=[]}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.addParent=function(studentId){var parentDetails={parent_name:$scope.parent[0].parent_name,parent_contact:$scope.parent[0].parent_contact,parent_relation:$scope.parent[0].parent_relation};studentServices.setParent(parentDetails,studentId).success(function(data,status){$scope.parent=[]}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.addStudentaddress=function(studentId){var parentDetails={cur_address:$scope.Studentaddress.cur_address,perm_address:$scope.Studentaddress.perm_address,bus_route_id:$scope.Studentaddress.bus_route_id,Aadhaar_no:$scope.Studentaddress.Aadhaar_no};studentServices.setStudentaddress(Studentaddress,studentId).success(function(data,status){ngDialog.open({template:"<p>Student Information  submitted successfully </p>",plain:true});$scope.parent=[]}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.selectedFile=null;$scope.msg="";$scope.loadFile=function(files){$scope.$apply(function(){$scope.selectedFile=files[0]})};$scope.handleFile=function(){var file=$scope.selectedFile;if(file){var reader=new FileReader;reader.onload=function(e){var data=e.target.result;var workbook=XLSX.read(data,{type:"binary"});var first_sheet_name=workbook.SheetNames[0];var dataObjects=XLSX.utils.sheet_to_json(workbook.Sheets[first_sheet_name]);if(dataObjects.length>0){$scope.save(dataObjects)}else{$scope.msg="Error : Something Wrong1 !"}};reader.onerror=function(ex){};reader.readAsBinaryString(file)}};$scope.save=function(data){console.log(JSON.stringify(data));$http({method:"POST",url:"globalServices.globalValue.baseURL + 'api/book/SCH-9271'",data:JSON.stringify(data),headers:{"Content-Type":"application/json"}}).then(function(data){if(data.status){$scope.msg="Data has been inserted ! "}else{$scope.msg="Error : Something Wrong2"}},function(error){$scope.msg="Error : Something Wrong3"})}}]);angular.module("school_erp").controller("studentAttendanceController",["$http","$scope","studentServices","globalServices","ngDialog",function($http,$scope,studentServices,globalServices,ngDialog){$scope.studentData=[];$scope.classDatanew=[];$scope.attendanceBox=[];globalServices.getClass().success(function(data,status){$scope.classDatanew=data.school_classes;$scope.classId=$scope.classDatanew[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){});$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getStudents($scope.secId)}).error(function(data,success){})};$scope.getStudents=function(classSecValue){studentServices.getStudents(classSecValue).success(function(data,status){$scope.studentData=data.students;$scope.attendanceBox=[];$scope.attendanceStatus()}).error(function(data,success){})};$scope.addAttendance=function(studentVal,status){var Attendance={class_id:$scope.classId,section_id:$scope.secId,session:"morning",status:status};console.log(Attendance);studentServices.setAttendance(Attendance,studentVal.student_id).success(function(data,status){ngDialog.open({template:"<p> Student Attendance  submitted successfully </p>",plain:true});$scope.data=[]}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.students=[];$scope.tickAll=function(status){$scope.attendanceBox.forEach(function(element){if(status){element.selected=true}else{element.selected=false}})};$scope.markAttendance=function(status){$scope.attendanceBox.forEach(function(element){if(element.selected){element.status=status}})};$scope.attendanceStatus=function(){$scope.studentData.forEach(function(element){var obj={student_id:element.student_id,admission_no:element.admission_no,roll_no:element.roll_no,first_name:element.first_name,last_name:element.last_name,selected:false,status:"none"};$scope.attendanceBox.push(obj)})};$scope.sendAttendanceHolder=[];$scope.submitBulkAttendance=function(){var dataB=$scope.attendanceBox;var allowSubmission=false;var i=0;var filterBox=dataB.filter(function(data){return data.status=="none"});if(filterBox.length==0){$scope.attendanceBox.forEach(function(element){var obj={student_id:element.student_id,status:element.status};$scope.sendAttendanceHolder.push(obj)});studentServices.setBulkAttendance($scope.sendAttendanceHolder,$scope.classId,$scope.secId).success(function(data,status){}).error(function(data,success){})}else{ngDialog.open({template:"<p> Few students are not marked properly</p>",plain:true})}}}]);angular.module("school_erp").controller("studentDetailsController",["$http","$scope",function($http,$scope){$scope.StudentDetails=[];employeeServices.getStudentDetails().success(function(data,status){$scope.StudentDetails=data.Students}).error(function(data,success){})}]);angular.module("school_erp").controller("subjectsController",["$http","$scope","subjectsServices","ngDialog","globalServices","$rootScope",function($http,$scope,subjectsServices,ngDialog,globalServices,$rootScope){$scope.subjectsData=[];$scope.data=[];$scope.classData=[];$scope.secId="";$scope.secData=[];$scope.classId="";$scope.getclassesInitialLoad=function(){globalServices.getClass().success(function(data,status){$scope.classData=data.school_classes;$scope.classId=$scope.classData[0].class_id;$scope.populateSections($scope.classId)}).error(function(data,success){})};$scope.populateSections=function(classId){globalServices.getSections(classId).success(function(data,status){$scope.secData=data.class_sections;$scope.secId=$scope.secData[0].section_id;$scope.getSubjects($scope.secId)}).error(function(data,success){})};$scope.getSubjects=function(secId){subjectsServices.getSubjects(secId).success(function(data,status){$scope.subjectsData=data.subjects}).error(function(data,success){})};$scope.addSubjects=function(data){console.log("message");console.log($scope.secId);var Subjects={_id:"",subject_id:$scope.data.subject_id,class_id:"",name:$scope.data.name};subjectsServices.setSubjects(Subjects,$scope.secId).success(function(data,status){ngDialog.open({template:"<p>Subjects are Added Successfully.</p>",plain:true});$scope.data=[];$scope.getSubjects($scope.secId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.EditSubjects=function(value,subjects){console.log("messsage");$scope.subjects=angular.copy($scope.subjectsData[value]);$scope.subject_id=$scope.subjects.subject_id;console.log($scope.subject_id);var SubjectDetails={name:$scope.subjects.name};console.log(SubjectsDetails);$scope.addEditSubjects(SubjectsDetails,$scope.subject_id)};$scope.addEditSubjects=function(SubjectsDetails,subject_id){examServices.EditSubjects(SubjectsDetails,subject_id).success(function(data,status){$scope.editdata=[];$scope.getSubjects($scope.secId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.DeleteSubjects=function(value){$scope.editdata=angular.copy($scope.subjectData[value]);$scope.subject_id=$scope.editdata.subject_id;console.log($scope.subject_id);examServices.DeleteSubjects($scope.subject_id).success(function(data,status){ngDialog.open({template:"<p>Subject is Deleted Successfully.</p>",plain:true});$scope.editdata=[];$scope.getSubjects($scope.secId)}).error(function(data,success){ngDialog.open({template:"<p>Some Error Occured!</p>",plain:true})})};$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}};$scope.showRole=function(role){return globalServices.fetchRoleAuth(role)};if($rootScope.role=="parent"){$scope.secId=$rootScope.student.section;$scope.getSubjects($scope.secId)}else{$scope.getclassesInitialLoad()}}]);angular.module("school_erp").factory("subjectsServices",["$http","globalServices",function($http,globalServices){var subjectsServices={};subjectsServices.getSubjects=function(secID){return $http({method:"GET",url:globalServices.globalValue.baseURL+"api/subjects/"+secID})};subjectsServices.setSubjects=function(dataValue,secID){console.log(dataValue);return $http({method:"POST",url:globalServices.globalValue.baseURL+"api/subjects/"+secID,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};subjectsServices.EditSubjects=function(dataValue,subject_id){console.log(dataValue);return $http({method:"PUT",url:globalServices.globalValue.baseURL+"api/edit_subjects/"+subject_id,data:$.param(dataValue),headers:{"Content-Type":"application/x-www-form-urlencoded"}})};subjectsServices.DeleteSubjects=function(subject_id){return $http({method:"DELETE",url:globalServices.globalValue.baseURL+"api/delete_subjects/"+subject_id})};return subjectsServices}]);angular.module("school_erp").controller("teacherWiseController",["$http","$scope",function($http,$scope){$scope.employeeData=[];employeeServices.getEmployee().success(function(data,status){$scope.employeeData=data.employee}).error(function(data,success){});$scope.exportAction=function(option){switch(option){case"pdf":$scope.$broadcast("export-pdf",{});break;case"excel":$scope.$broadcast("export-excel",{});break;default:console.log("no event caught")}}}]);